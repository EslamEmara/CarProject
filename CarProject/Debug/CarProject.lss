
CarProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007ec  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  000007ec  00000880  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800070  00800070  00000890  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000890  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  000008fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011fc  00000000  00000000  00000a44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009a7  00000000  00000000  00001c40  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a6f  00000000  00000000  000025e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000248  00000000  00000000  00003058  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e9  00000000  00000000  000032a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008fe  00000000  00000000  00003889  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00004187  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ee       	ldi	r30, 0xEC	; 236
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e7       	ldi	r26, 0x70	; 112
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a3 37       	cpi	r26, 0x73	; 115
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 ee 01 	call	0x3dc	; 0x3dc <main>
  8a:	0c 94 f4 03 	jmp	0x7e8	; 0x7e8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <car_init>:


void car_init(void)
{
	/* init motor1 */
	Motor_init(MOTOR_1_config);
  92:	40 91 67 00 	lds	r20, 0x0067	; 0x800067 <MOTOR_1_config>
  96:	50 91 68 00 	lds	r21, 0x0068	; 0x800068 <MOTOR_1_config+0x1>
  9a:	60 91 69 00 	lds	r22, 0x0069	; 0x800069 <MOTOR_1_config+0x2>
  9e:	70 91 6a 00 	lds	r23, 0x006A	; 0x80006a <MOTOR_1_config+0x3>
  a2:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <MOTOR_1_config+0x4>
  a6:	0e 94 6d 01 	call	0x2da	; 0x2da <Motor_init>
	/* init motor2 */
	Motor_init(MOTOR_2_config );
  aa:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <MOTOR_2_config>
  ae:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <MOTOR_2_config+0x1>
  b2:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <MOTOR_2_config+0x2>
  b6:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <MOTOR_2_config+0x3>
  ba:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <MOTOR_2_config+0x4>
  be:	0e 94 6d 01 	call	0x2da	; 0x2da <Motor_init>
	
	/* init buttons */
	Button_init(BUTTON_G); // button 1 (G -> speed and direction)
  c2:	60 e0       	ldi	r22, 0x00	; 0
  c4:	82 e0       	ldi	r24, 0x02	; 2
  c6:	0e 94 4d 01 	call	0x29a	; 0x29a <Button_init>
	Button_init(BUTTON_M); // button 2 (MOVE)
  ca:	61 e0       	ldi	r22, 0x01	; 1
  cc:	82 e0       	ldi	r24, 0x02	; 2
  ce:	0e 94 4d 01 	call	0x29a	; 0x29a <Button_init>
	Button_init(BUTTON_L); // button 3 (left)
  d2:	62 e0       	ldi	r22, 0x02	; 2
  d4:	82 e0       	ldi	r24, 0x02	; 2
  d6:	0e 94 4d 01 	call	0x29a	; 0x29a <Button_init>
	Button_init(BUTTON_R); // button 4 (right)
  da:	63 e0       	ldi	r22, 0x03	; 3
  dc:	82 e0       	ldi	r24, 0x02	; 2
  de:	0e 94 4d 01 	call	0x29a	; 0x29a <Button_init>
  e2:	08 95       	ret

000000e4 <car_moveRight>:
}


void car_moveRight(uint8 speed)
{
  e4:	cf 93       	push	r28
  e6:	c8 2f       	mov	r28, r24
	/* move the 2 motors right at the same desired speed */
	Motor_moveBackwards(MOTOR_1_config,speed);
  e8:	28 2f       	mov	r18, r24
  ea:	40 91 67 00 	lds	r20, 0x0067	; 0x800067 <MOTOR_1_config>
  ee:	50 91 68 00 	lds	r21, 0x0068	; 0x800068 <MOTOR_1_config+0x1>
  f2:	60 91 69 00 	lds	r22, 0x0069	; 0x800069 <MOTOR_1_config+0x2>
  f6:	70 91 6a 00 	lds	r23, 0x006A	; 0x80006a <MOTOR_1_config+0x3>
  fa:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <MOTOR_1_config+0x4>
  fe:	0e 94 c8 01 	call	0x390	; 0x390 <Motor_moveBackwards>
	Motor_moveForward(MOTOR_2_config,speed);
 102:	2c 2f       	mov	r18, r28
 104:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <MOTOR_2_config>
 108:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <MOTOR_2_config+0x1>
 10c:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <MOTOR_2_config+0x2>
 110:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <MOTOR_2_config+0x3>
 114:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <MOTOR_2_config+0x4>
 118:	0e 94 a2 01 	call	0x344	; 0x344 <Motor_moveForward>
}
 11c:	cf 91       	pop	r28
 11e:	08 95       	ret

00000120 <car_moveLeft>:


void car_moveLeft(uint8 speed)
{
 120:	cf 93       	push	r28
 122:	c8 2f       	mov	r28, r24
	/* move the 2 motors left at the same desired speed */
	Motor_moveForward(MOTOR_1_config,speed);
 124:	28 2f       	mov	r18, r24
 126:	40 91 67 00 	lds	r20, 0x0067	; 0x800067 <MOTOR_1_config>
 12a:	50 91 68 00 	lds	r21, 0x0068	; 0x800068 <MOTOR_1_config+0x1>
 12e:	60 91 69 00 	lds	r22, 0x0069	; 0x800069 <MOTOR_1_config+0x2>
 132:	70 91 6a 00 	lds	r23, 0x006A	; 0x80006a <MOTOR_1_config+0x3>
 136:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <MOTOR_1_config+0x4>
 13a:	0e 94 a2 01 	call	0x344	; 0x344 <Motor_moveForward>
	Motor_moveBackwards(MOTOR_2_config,speed);
 13e:	2c 2f       	mov	r18, r28
 140:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <MOTOR_2_config>
 144:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <MOTOR_2_config+0x1>
 148:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <MOTOR_2_config+0x2>
 14c:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <MOTOR_2_config+0x3>
 150:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <MOTOR_2_config+0x4>
 154:	0e 94 c8 01 	call	0x390	; 0x390 <Motor_moveBackwards>
}
 158:	cf 91       	pop	r28
 15a:	08 95       	ret

0000015c <car_moveForward>:
void car_moveForward(uint8 speed)
{
 15c:	cf 93       	push	r28
 15e:	c8 2f       	mov	r28, r24
	/* move the 2 motors forward at the same desired speed */
	Motor_moveForward(MOTOR_1_config,speed);
 160:	28 2f       	mov	r18, r24
 162:	40 91 67 00 	lds	r20, 0x0067	; 0x800067 <MOTOR_1_config>
 166:	50 91 68 00 	lds	r21, 0x0068	; 0x800068 <MOTOR_1_config+0x1>
 16a:	60 91 69 00 	lds	r22, 0x0069	; 0x800069 <MOTOR_1_config+0x2>
 16e:	70 91 6a 00 	lds	r23, 0x006A	; 0x80006a <MOTOR_1_config+0x3>
 172:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <MOTOR_1_config+0x4>
 176:	0e 94 a2 01 	call	0x344	; 0x344 <Motor_moveForward>
	Motor_moveForward(MOTOR_2_config,speed);
 17a:	2c 2f       	mov	r18, r28
 17c:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <MOTOR_2_config>
 180:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <MOTOR_2_config+0x1>
 184:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <MOTOR_2_config+0x2>
 188:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <MOTOR_2_config+0x3>
 18c:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <MOTOR_2_config+0x4>
 190:	0e 94 a2 01 	call	0x344	; 0x344 <Motor_moveForward>
}
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <car_moveBackward>:


void car_moveBackward(void)
{
	/* move the 2 motors backward at the same speed 30 */
	Motor_moveBackwards(MOTOR_1_config,30);
 198:	2e e1       	ldi	r18, 0x1E	; 30
 19a:	40 91 67 00 	lds	r20, 0x0067	; 0x800067 <MOTOR_1_config>
 19e:	50 91 68 00 	lds	r21, 0x0068	; 0x800068 <MOTOR_1_config+0x1>
 1a2:	60 91 69 00 	lds	r22, 0x0069	; 0x800069 <MOTOR_1_config+0x2>
 1a6:	70 91 6a 00 	lds	r23, 0x006A	; 0x80006a <MOTOR_1_config+0x3>
 1aa:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <MOTOR_1_config+0x4>
 1ae:	0e 94 c8 01 	call	0x390	; 0x390 <Motor_moveBackwards>
	Motor_moveBackwards(MOTOR_2_config,30);
 1b2:	2e e1       	ldi	r18, 0x1E	; 30
 1b4:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <MOTOR_2_config>
 1b8:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <MOTOR_2_config+0x1>
 1bc:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <MOTOR_2_config+0x2>
 1c0:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <MOTOR_2_config+0x3>
 1c4:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <MOTOR_2_config+0x4>
 1c8:	0e 94 c8 01 	call	0x390	; 0x390 <Motor_moveBackwards>
 1cc:	08 95       	ret

000001ce <car_updateState>:


void car_updateState(void)
{
	static uint8* status_Ptr = status_arr;
	if(Button_read_one_press(BUTTON_G,PULLUP_RES) == HIGH) // if G button is pressed
 1ce:	40 e0       	ldi	r20, 0x00	; 0
 1d0:	60 e0       	ldi	r22, 0x00	; 0
 1d2:	82 e0       	ldi	r24, 0x02	; 2
 1d4:	0e 94 60 01 	call	0x2c0	; 0x2c0 <Button_read_one_press>
 1d8:	81 30       	cpi	r24, 0x01	; 1
 1da:	c1 f4       	brne	.+48     	; 0x20c <car_updateState+0x3e>
	{
		if( *status_Ptr == B_30)
 1dc:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 1e0:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 1e4:	80 81       	ld	r24, Z
 1e6:	88 37       	cpi	r24, 0x78	; 120
 1e8:	49 f4       	brne	.+18     	; 0x1fc <car_updateState+0x2e>
		{
			Current_state = *status_Ptr;
 1ea:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <Current_state>
			status_Ptr = status_arr;  // reinitialize pointer position to the F_30
 1ee:	8c e6       	ldi	r24, 0x6C	; 108
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 1f6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 1fa:	08 95       	ret
		}
		else
		{
			Current_state = *status_Ptr;
 1fc:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <Current_state>
			status_Ptr++;
 200:	31 96       	adiw	r30, 0x01	; 1
 202:	f0 93 61 00 	sts	0x0061, r31	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 206:	e0 93 60 00 	sts	0x0060, r30	; 0x800060 <__DATA_REGION_ORIGIN__>
 20a:	08 95       	ret
		}
	}
	else if(Button_read(BUTTON_M,PULLUP_RES) == HIGH) // if M button is pressed
 20c:	40 e0       	ldi	r20, 0x00	; 0
 20e:	61 e0       	ldi	r22, 0x01	; 1
 210:	82 e0       	ldi	r24, 0x02	; 2
 212:	0e 94 53 01 	call	0x2a6	; 0x2a6 <Button_read>
 216:	81 30       	cpi	r24, 0x01	; 1
 218:	21 f4       	brne	.+8      	; 0x222 <car_updateState+0x54>
	{
		Car_movement  = FORWARD;
 21a:	85 e0       	ldi	r24, 0x05	; 5
 21c:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <Car_movement>
 220:	08 95       	ret
	}
	else if(Button_read(BUTTON_R,PULLUP_RES) == HIGH) // if R button is pressed
 222:	40 e0       	ldi	r20, 0x00	; 0
 224:	63 e0       	ldi	r22, 0x03	; 3
 226:	82 e0       	ldi	r24, 0x02	; 2
 228:	0e 94 53 01 	call	0x2a6	; 0x2a6 <Button_read>
 22c:	81 30       	cpi	r24, 0x01	; 1
 22e:	21 f4       	brne	.+8      	; 0x238 <car_updateState+0x6a>
	{
		Car_movement  = RIGHT;
 230:	86 e0       	ldi	r24, 0x06	; 6
 232:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <Car_movement>
 236:	08 95       	ret
	}
	else if(Button_read(BUTTON_L,PULLUP_RES) == HIGH) // if L button is pressed
 238:	40 e0       	ldi	r20, 0x00	; 0
 23a:	62 e0       	ldi	r22, 0x02	; 2
 23c:	82 e0       	ldi	r24, 0x02	; 2
 23e:	0e 94 53 01 	call	0x2a6	; 0x2a6 <Button_read>
 242:	81 30       	cpi	r24, 0x01	; 1
 244:	21 f4       	brne	.+8      	; 0x24e <car_updateState+0x80>
	{
		Car_movement  = LEFT;
 246:	87 e0       	ldi	r24, 0x07	; 7
 248:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <Car_movement>
 24c:	08 95       	ret
	}
	else
	{
		Car_movement  = STOP;
 24e:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <Car_movement>
 252:	08 95       	ret

00000254 <app>:
	}
}

void app(){
	car_updateState();
 254:	0e 94 e7 00 	call	0x1ce	; 0x1ce <car_updateState>
	
	if (Car_movement == FORWARD){
 258:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <Car_movement>
 25c:	85 30       	cpi	r24, 0x05	; 5
 25e:	61 f4       	brne	.+24     	; 0x278 <app+0x24>
		if (Current_state < 100){
 260:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <Current_state>
 264:	84 36       	cpi	r24, 0x64	; 100
 266:	18 f4       	brcc	.+6      	; 0x26e <app+0x1a>
			car_moveForward(Current_state);
 268:	0e 94 ae 00 	call	0x15c	; 0x15c <car_moveForward>
 26c:	08 95       	ret
		}
		else if(Current_state > 100){
 26e:	85 36       	cpi	r24, 0x65	; 101
 270:	98 f0       	brcs	.+38     	; 0x298 <app+0x44>
			car_moveBackward();
 272:	0e 94 cc 00 	call	0x198	; 0x198 <car_moveBackward>
 276:	08 95       	ret
		}
	}
	else if (Car_movement == LEFT){
 278:	87 30       	cpi	r24, 0x07	; 7
 27a:	21 f4       	brne	.+8      	; 0x284 <app+0x30>
		car_moveLeft(LR_SPEED);
 27c:	8e e1       	ldi	r24, 0x1E	; 30
 27e:	0e 94 90 00 	call	0x120	; 0x120 <car_moveLeft>
 282:	08 95       	ret
	}
	else if (Car_movement == RIGHT){
 284:	86 30       	cpi	r24, 0x06	; 6
 286:	21 f4       	brne	.+8      	; 0x290 <app+0x3c>
		car_moveRight(LR_SPEED);
 288:	8e e1       	ldi	r24, 0x1E	; 30
 28a:	0e 94 72 00 	call	0xe4	; 0xe4 <car_moveRight>
 28e:	08 95       	ret
	}
	else if(Car_movement == STOP){
 290:	81 11       	cpse	r24, r1
 292:	02 c0       	rjmp	.+4      	; 0x298 <app+0x44>
		car_moveForward(0);
 294:	0e 94 ae 00 	call	0x15c	; 0x15c <car_moveForward>
 298:	08 95       	ret

0000029a <Button_init>:
 29a:	68 30       	cpi	r22, 0x08	; 8
 29c:	18 f4       	brcc	.+6      	; 0x2a4 <Button_init+0xa>
 29e:	40 e0       	ldi	r20, 0x00	; 0
 2a0:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <DIO_SetPinDirection>
 2a4:	08 95       	ret

000002a6 <Button_read>:
 2a6:	41 30       	cpi	r20, 0x01	; 1
 2a8:	21 f4       	brne	.+8      	; 0x2b2 <Button_read+0xc>
 2aa:	0e 94 dd 02 	call	0x5ba	; 0x5ba <DIO_GetPinValue>
 2ae:	98 2f       	mov	r25, r24
 2b0:	05 c0       	rjmp	.+10     	; 0x2bc <Button_read+0x16>
 2b2:	0e 94 dd 02 	call	0x5ba	; 0x5ba <DIO_GetPinValue>
 2b6:	91 e0       	ldi	r25, 0x01	; 1
 2b8:	81 11       	cpse	r24, r1
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	89 2f       	mov	r24, r25
 2be:	08 95       	ret

000002c0 <Button_read_one_press>:
 2c0:	0e 94 53 01 	call	0x2a6	; 0x2a6 <Button_read>
 2c4:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <__data_end>
 2c8:	89 13       	cpse	r24, r25
 2ca:	02 c0       	rjmp	.+4      	; 0x2d0 <Button_read_one_press+0x10>
 2cc:	92 e0       	ldi	r25, 0x02	; 2
 2ce:	01 c0       	rjmp	.+2      	; 0x2d2 <Button_read_one_press+0x12>
 2d0:	98 2f       	mov	r25, r24
 2d2:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__data_end>
 2d6:	89 2f       	mov	r24, r25
 2d8:	08 95       	ret

000002da <Motor_init>:
 * Expected OUTPUT: Setting Pins of PWM and Direction as output.
					Initializing PWM.
 */

void Motor_init(ST_MOTORconfig_t config)
{
 2da:	1f 93       	push	r17
 2dc:	cf 93       	push	r28
 2de:	df 93       	push	r29
 2e0:	00 d0       	rcall	.+0      	; 0x2e2 <Motor_init+0x8>
 2e2:	00 d0       	rcall	.+0      	; 0x2e4 <Motor_init+0xa>
 2e4:	1f 92       	push	r1
 2e6:	cd b7       	in	r28, 0x3d	; 61
 2e8:	de b7       	in	r29, 0x3e	; 62
 2ea:	49 83       	std	Y+1, r20	; 0x01
 2ec:	5a 83       	std	Y+2, r21	; 0x02
 2ee:	6b 83       	std	Y+3, r22	; 0x03
 2f0:	7c 83       	std	Y+4, r23	; 0x04
	if(config.PWM_ID == PWM1)
 2f2:	18 2f       	mov	r17, r24
 2f4:	81 11       	cpse	r24, r1
 2f6:	06 c0       	rjmp	.+12     	; 0x304 <Motor_init+0x2a>
		pwm_init(PWM1,NON_INVERTING_MODE,PRESCALAR);
 2f8:	40 e0       	ldi	r20, 0x00	; 0
 2fa:	50 e0       	ldi	r21, 0x00	; 0
 2fc:	60 e0       	ldi	r22, 0x00	; 0
 2fe:	80 e0       	ldi	r24, 0x00	; 0
 300:	0e 94 0b 03 	call	0x616	; 0x616 <pwm_init>
		
	if(config.PWM_ID == PWM2)
 304:	11 30       	cpi	r17, 0x01	; 1
 306:	31 f4       	brne	.+12     	; 0x314 <Motor_init+0x3a>
		pwm_init(PWM2,NON_INVERTING_MODE,PRESCALAR);
 308:	40 e0       	ldi	r20, 0x00	; 0
 30a:	50 e0       	ldi	r21, 0x00	; 0
 30c:	60 e0       	ldi	r22, 0x00	; 0
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	0e 94 0b 03 	call	0x616	; 0x616 <pwm_init>
			
	if (config.DIR1_PIN <= 7 && config.DIR2_PIN <= 7 ){
 314:	6a 81       	ldd	r22, Y+2	; 0x02
 316:	68 30       	cpi	r22, 0x08	; 8
 318:	60 f4       	brcc	.+24     	; 0x332 <Motor_init+0x58>
 31a:	1c 81       	ldd	r17, Y+4	; 0x04
 31c:	18 30       	cpi	r17, 0x08	; 8
 31e:	48 f4       	brcc	.+18     	; 0x332 <Motor_init+0x58>
		DIO_SetPinDirection(config.DIR1_PORT,config.DIR1_PIN,OUTPUT);
 320:	41 e0       	ldi	r20, 0x01	; 1
 322:	89 81       	ldd	r24, Y+1	; 0x01
 324:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <DIO_SetPinDirection>
		DIO_SetPinDirection(config.DIR2_PORT,config.DIR2_PIN,OUTPUT);
 328:	41 e0       	ldi	r20, 0x01	; 1
 32a:	61 2f       	mov	r22, r17
 32c:	8b 81       	ldd	r24, Y+3	; 0x03
 32e:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <DIO_SetPinDirection>

	}

	
}
 332:	0f 90       	pop	r0
 334:	0f 90       	pop	r0
 336:	0f 90       	pop	r0
 338:	0f 90       	pop	r0
 33a:	0f 90       	pop	r0
 33c:	df 91       	pop	r29
 33e:	cf 91       	pop	r28
 340:	1f 91       	pop	r17
 342:	08 95       	ret

00000344 <Motor_moveForward>:
 *	Inputs ST_MOTORconfig_t motor ID config , uint8_t speed percentage from 0 to 100
 *	void return. 
 *	Expected output: Motor rotate clockwise if inputs are valid 
 */
void Motor_moveForward(ST_MOTORconfig_t config,uint8 speed)
{
 344:	1f 93       	push	r17
 346:	cf 93       	push	r28
 348:	df 93       	push	r29
 34a:	00 d0       	rcall	.+0      	; 0x34c <Motor_moveForward+0x8>
 34c:	00 d0       	rcall	.+0      	; 0x34e <Motor_moveForward+0xa>
 34e:	1f 92       	push	r1
 350:	cd b7       	in	r28, 0x3d	; 61
 352:	de b7       	in	r29, 0x3e	; 62
 354:	94 2f       	mov	r25, r20
 356:	6b 83       	std	Y+3, r22	; 0x03
 358:	7c 83       	std	Y+4, r23	; 0x04
 35a:	8d 83       	std	Y+5, r24	; 0x05
 35c:	12 2f       	mov	r17, r18
	DIO_SetPinValue(config.DIR1_PORT,config.DIR1_PIN,LOW);
 35e:	40 e0       	ldi	r20, 0x00	; 0
 360:	65 2f       	mov	r22, r21
 362:	89 2f       	mov	r24, r25
 364:	0e 94 68 02 	call	0x4d0	; 0x4d0 <DIO_SetPinValue>
	DIO_SetPinValue(config.DIR2_PORT,config.DIR2_PIN,HIGH);
 368:	41 e0       	ldi	r20, 0x01	; 1
 36a:	6c 81       	ldd	r22, Y+4	; 0x04
 36c:	8b 81       	ldd	r24, Y+3	; 0x03
 36e:	0e 94 68 02 	call	0x4d0	; 0x4d0 <DIO_SetPinValue>

	if (speed>=0 && speed <=100)
 372:	15 36       	cpi	r17, 0x65	; 101
 374:	20 f4       	brcc	.+8      	; 0x37e <Motor_moveForward+0x3a>
		pwm_SetSpeed(config.PWM_ID,speed);
 376:	61 2f       	mov	r22, r17
 378:	8d 81       	ldd	r24, Y+5	; 0x05
 37a:	0e 94 bb 03 	call	0x776	; 0x776 <pwm_SetSpeed>
}
 37e:	0f 90       	pop	r0
 380:	0f 90       	pop	r0
 382:	0f 90       	pop	r0
 384:	0f 90       	pop	r0
 386:	0f 90       	pop	r0
 388:	df 91       	pop	r29
 38a:	cf 91       	pop	r28
 38c:	1f 91       	pop	r17
 38e:	08 95       	ret

00000390 <Motor_moveBackwards>:
 *	void return. 
 *	Expected output: Motor rotate anti-clockwise if inputs are valid 
 */

void Motor_moveBackwards(ST_MOTORconfig_t config,uint8 speed)
{
 390:	1f 93       	push	r17
 392:	cf 93       	push	r28
 394:	df 93       	push	r29
 396:	00 d0       	rcall	.+0      	; 0x398 <Motor_moveBackwards+0x8>
 398:	00 d0       	rcall	.+0      	; 0x39a <Motor_moveBackwards+0xa>
 39a:	1f 92       	push	r1
 39c:	cd b7       	in	r28, 0x3d	; 61
 39e:	de b7       	in	r29, 0x3e	; 62
 3a0:	49 83       	std	Y+1, r20	; 0x01
 3a2:	5a 83       	std	Y+2, r21	; 0x02
 3a4:	96 2f       	mov	r25, r22
 3a6:	67 2f       	mov	r22, r23
 3a8:	8d 83       	std	Y+5, r24	; 0x05
 3aa:	12 2f       	mov	r17, r18
		DIO_SetPinValue(config.DIR2_PORT,config.DIR2_PIN,LOW);
 3ac:	40 e0       	ldi	r20, 0x00	; 0
 3ae:	89 2f       	mov	r24, r25
 3b0:	0e 94 68 02 	call	0x4d0	; 0x4d0 <DIO_SetPinValue>
		DIO_SetPinValue(config.DIR1_PORT,config.DIR1_PIN,HIGH);
 3b4:	41 e0       	ldi	r20, 0x01	; 1
 3b6:	6a 81       	ldd	r22, Y+2	; 0x02
 3b8:	89 81       	ldd	r24, Y+1	; 0x01
 3ba:	0e 94 68 02 	call	0x4d0	; 0x4d0 <DIO_SetPinValue>
		if (speed>=0 && speed <=100)
 3be:	15 36       	cpi	r17, 0x65	; 101
 3c0:	20 f4       	brcc	.+8      	; 0x3ca <Motor_moveBackwards+0x3a>
			pwm_SetSpeed(config.PWM_ID,speed);
 3c2:	61 2f       	mov	r22, r17
 3c4:	8d 81       	ldd	r24, Y+5	; 0x05
 3c6:	0e 94 bb 03 	call	0x776	; 0x776 <pwm_SetSpeed>
 3ca:	0f 90       	pop	r0
 3cc:	0f 90       	pop	r0
 3ce:	0f 90       	pop	r0
 3d0:	0f 90       	pop	r0
 3d2:	0f 90       	pop	r0
 3d4:	df 91       	pop	r29
 3d6:	cf 91       	pop	r28
 3d8:	1f 91       	pop	r17
 3da:	08 95       	ret

000003dc <main>:

#include "APP/car.h"

int main(void)
{
	car_init();
 3dc:	0e 94 49 00 	call	0x92	; 0x92 <car_init>

    while (1) 
    {
		app();
 3e0:	0e 94 2a 01 	call	0x254	; 0x254 <app>
 3e4:	fd cf       	rjmp	.-6      	; 0x3e0 <main+0x4>

000003e6 <DIO_SetPinDirection>:
 3e6:	81 30       	cpi	r24, 0x01	; 1
 3e8:	11 f1       	breq	.+68     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 3ea:	30 f0       	brcs	.+12     	; 0x3f8 <DIO_SetPinDirection+0x12>
 3ec:	82 30       	cpi	r24, 0x02	; 2
 3ee:	d1 f1       	breq	.+116    	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 3f0:	83 30       	cpi	r24, 0x03	; 3
 3f2:	09 f4       	brne	.+2      	; 0x3f6 <DIO_SetPinDirection+0x10>
 3f4:	52 c0       	rjmp	.+164    	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 3f6:	08 95       	ret
 3f8:	41 30       	cpi	r20, 0x01	; 1
 3fa:	59 f4       	brne	.+22     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 3fc:	2a b3       	in	r18, 0x1a	; 26
 3fe:	81 e0       	ldi	r24, 0x01	; 1
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	02 c0       	rjmp	.+4      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 404:	88 0f       	add	r24, r24
 406:	99 1f       	adc	r25, r25
 408:	6a 95       	dec	r22
 40a:	e2 f7       	brpl	.-8      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 40c:	82 2b       	or	r24, r18
 40e:	8a bb       	out	0x1a, r24	; 26
 410:	08 95       	ret
 412:	41 11       	cpse	r20, r1
 414:	5c c0       	rjmp	.+184    	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 416:	2a b3       	in	r18, 0x1a	; 26
 418:	81 e0       	ldi	r24, 0x01	; 1
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	02 c0       	rjmp	.+4      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 41e:	88 0f       	add	r24, r24
 420:	99 1f       	adc	r25, r25
 422:	6a 95       	dec	r22
 424:	e2 f7       	brpl	.-8      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 426:	80 95       	com	r24
 428:	82 23       	and	r24, r18
 42a:	8a bb       	out	0x1a, r24	; 26
 42c:	08 95       	ret
 42e:	41 30       	cpi	r20, 0x01	; 1
 430:	59 f4       	brne	.+22     	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 432:	27 b3       	in	r18, 0x17	; 23
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	02 c0       	rjmp	.+4      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 43a:	88 0f       	add	r24, r24
 43c:	99 1f       	adc	r25, r25
 43e:	6a 95       	dec	r22
 440:	e2 f7       	brpl	.-8      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 442:	82 2b       	or	r24, r18
 444:	87 bb       	out	0x17, r24	; 23
 446:	08 95       	ret
 448:	41 11       	cpse	r20, r1
 44a:	41 c0       	rjmp	.+130    	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 44c:	27 b3       	in	r18, 0x17	; 23
 44e:	81 e0       	ldi	r24, 0x01	; 1
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	02 c0       	rjmp	.+4      	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 454:	88 0f       	add	r24, r24
 456:	99 1f       	adc	r25, r25
 458:	6a 95       	dec	r22
 45a:	e2 f7       	brpl	.-8      	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 45c:	80 95       	com	r24
 45e:	82 23       	and	r24, r18
 460:	87 bb       	out	0x17, r24	; 23
 462:	08 95       	ret
 464:	41 30       	cpi	r20, 0x01	; 1
 466:	59 f4       	brne	.+22     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 468:	24 b3       	in	r18, 0x14	; 20
 46a:	81 e0       	ldi	r24, 0x01	; 1
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	02 c0       	rjmp	.+4      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 470:	88 0f       	add	r24, r24
 472:	99 1f       	adc	r25, r25
 474:	6a 95       	dec	r22
 476:	e2 f7       	brpl	.-8      	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 478:	82 2b       	or	r24, r18
 47a:	84 bb       	out	0x14, r24	; 20
 47c:	08 95       	ret
 47e:	41 11       	cpse	r20, r1
 480:	26 c0       	rjmp	.+76     	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 482:	24 b3       	in	r18, 0x14	; 20
 484:	81 e0       	ldi	r24, 0x01	; 1
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	02 c0       	rjmp	.+4      	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 48a:	88 0f       	add	r24, r24
 48c:	99 1f       	adc	r25, r25
 48e:	6a 95       	dec	r22
 490:	e2 f7       	brpl	.-8      	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
 492:	80 95       	com	r24
 494:	82 23       	and	r24, r18
 496:	84 bb       	out	0x14, r24	; 20
 498:	08 95       	ret
 49a:	41 30       	cpi	r20, 0x01	; 1
 49c:	59 f4       	brne	.+22     	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
 49e:	21 b3       	in	r18, 0x11	; 17
 4a0:	81 e0       	ldi	r24, 0x01	; 1
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	02 c0       	rjmp	.+4      	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
 4a6:	88 0f       	add	r24, r24
 4a8:	99 1f       	adc	r25, r25
 4aa:	6a 95       	dec	r22
 4ac:	e2 f7       	brpl	.-8      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 4ae:	82 2b       	or	r24, r18
 4b0:	81 bb       	out	0x11, r24	; 17
 4b2:	08 95       	ret
 4b4:	41 11       	cpse	r20, r1
 4b6:	0b c0       	rjmp	.+22     	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 4b8:	21 b3       	in	r18, 0x11	; 17
 4ba:	81 e0       	ldi	r24, 0x01	; 1
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	02 c0       	rjmp	.+4      	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
 4c0:	88 0f       	add	r24, r24
 4c2:	99 1f       	adc	r25, r25
 4c4:	6a 95       	dec	r22
 4c6:	e2 f7       	brpl	.-8      	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 4c8:	80 95       	com	r24
 4ca:	82 23       	and	r24, r18
 4cc:	81 bb       	out	0x11, r24	; 17
 4ce:	08 95       	ret

000004d0 <DIO_SetPinValue>:
 4d0:	81 30       	cpi	r24, 0x01	; 1
 4d2:	11 f1       	breq	.+68     	; 0x518 <DIO_SetPinValue+0x48>
 4d4:	30 f0       	brcs	.+12     	; 0x4e2 <DIO_SetPinValue+0x12>
 4d6:	82 30       	cpi	r24, 0x02	; 2
 4d8:	d1 f1       	breq	.+116    	; 0x54e <DIO_SetPinValue+0x7e>
 4da:	83 30       	cpi	r24, 0x03	; 3
 4dc:	09 f4       	brne	.+2      	; 0x4e0 <DIO_SetPinValue+0x10>
 4de:	52 c0       	rjmp	.+164    	; 0x584 <DIO_SetPinValue+0xb4>
 4e0:	08 95       	ret
 4e2:	41 30       	cpi	r20, 0x01	; 1
 4e4:	59 f4       	brne	.+22     	; 0x4fc <DIO_SetPinValue+0x2c>
 4e6:	2b b3       	in	r18, 0x1b	; 27
 4e8:	81 e0       	ldi	r24, 0x01	; 1
 4ea:	90 e0       	ldi	r25, 0x00	; 0
 4ec:	02 c0       	rjmp	.+4      	; 0x4f2 <DIO_SetPinValue+0x22>
 4ee:	88 0f       	add	r24, r24
 4f0:	99 1f       	adc	r25, r25
 4f2:	6a 95       	dec	r22
 4f4:	e2 f7       	brpl	.-8      	; 0x4ee <DIO_SetPinValue+0x1e>
 4f6:	82 2b       	or	r24, r18
 4f8:	8b bb       	out	0x1b, r24	; 27
 4fa:	08 95       	ret
 4fc:	41 11       	cpse	r20, r1
 4fe:	5c c0       	rjmp	.+184    	; 0x5b8 <DIO_SetPinValue+0xe8>
 500:	2b b3       	in	r18, 0x1b	; 27
 502:	81 e0       	ldi	r24, 0x01	; 1
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	02 c0       	rjmp	.+4      	; 0x50c <DIO_SetPinValue+0x3c>
 508:	88 0f       	add	r24, r24
 50a:	99 1f       	adc	r25, r25
 50c:	6a 95       	dec	r22
 50e:	e2 f7       	brpl	.-8      	; 0x508 <DIO_SetPinValue+0x38>
 510:	80 95       	com	r24
 512:	82 23       	and	r24, r18
 514:	8b bb       	out	0x1b, r24	; 27
 516:	08 95       	ret
 518:	41 30       	cpi	r20, 0x01	; 1
 51a:	59 f4       	brne	.+22     	; 0x532 <DIO_SetPinValue+0x62>
 51c:	28 b3       	in	r18, 0x18	; 24
 51e:	81 e0       	ldi	r24, 0x01	; 1
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	02 c0       	rjmp	.+4      	; 0x528 <DIO_SetPinValue+0x58>
 524:	88 0f       	add	r24, r24
 526:	99 1f       	adc	r25, r25
 528:	6a 95       	dec	r22
 52a:	e2 f7       	brpl	.-8      	; 0x524 <DIO_SetPinValue+0x54>
 52c:	82 2b       	or	r24, r18
 52e:	88 bb       	out	0x18, r24	; 24
 530:	08 95       	ret
 532:	41 11       	cpse	r20, r1
 534:	41 c0       	rjmp	.+130    	; 0x5b8 <DIO_SetPinValue+0xe8>
 536:	28 b3       	in	r18, 0x18	; 24
 538:	81 e0       	ldi	r24, 0x01	; 1
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	02 c0       	rjmp	.+4      	; 0x542 <DIO_SetPinValue+0x72>
 53e:	88 0f       	add	r24, r24
 540:	99 1f       	adc	r25, r25
 542:	6a 95       	dec	r22
 544:	e2 f7       	brpl	.-8      	; 0x53e <DIO_SetPinValue+0x6e>
 546:	80 95       	com	r24
 548:	82 23       	and	r24, r18
 54a:	88 bb       	out	0x18, r24	; 24
 54c:	08 95       	ret
 54e:	41 30       	cpi	r20, 0x01	; 1
 550:	59 f4       	brne	.+22     	; 0x568 <DIO_SetPinValue+0x98>
 552:	25 b3       	in	r18, 0x15	; 21
 554:	81 e0       	ldi	r24, 0x01	; 1
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	02 c0       	rjmp	.+4      	; 0x55e <DIO_SetPinValue+0x8e>
 55a:	88 0f       	add	r24, r24
 55c:	99 1f       	adc	r25, r25
 55e:	6a 95       	dec	r22
 560:	e2 f7       	brpl	.-8      	; 0x55a <DIO_SetPinValue+0x8a>
 562:	82 2b       	or	r24, r18
 564:	85 bb       	out	0x15, r24	; 21
 566:	08 95       	ret
 568:	41 11       	cpse	r20, r1
 56a:	26 c0       	rjmp	.+76     	; 0x5b8 <DIO_SetPinValue+0xe8>
 56c:	25 b3       	in	r18, 0x15	; 21
 56e:	81 e0       	ldi	r24, 0x01	; 1
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	02 c0       	rjmp	.+4      	; 0x578 <DIO_SetPinValue+0xa8>
 574:	88 0f       	add	r24, r24
 576:	99 1f       	adc	r25, r25
 578:	6a 95       	dec	r22
 57a:	e2 f7       	brpl	.-8      	; 0x574 <DIO_SetPinValue+0xa4>
 57c:	80 95       	com	r24
 57e:	82 23       	and	r24, r18
 580:	85 bb       	out	0x15, r24	; 21
 582:	08 95       	ret
 584:	41 30       	cpi	r20, 0x01	; 1
 586:	59 f4       	brne	.+22     	; 0x59e <DIO_SetPinValue+0xce>
 588:	22 b3       	in	r18, 0x12	; 18
 58a:	81 e0       	ldi	r24, 0x01	; 1
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	02 c0       	rjmp	.+4      	; 0x594 <DIO_SetPinValue+0xc4>
 590:	88 0f       	add	r24, r24
 592:	99 1f       	adc	r25, r25
 594:	6a 95       	dec	r22
 596:	e2 f7       	brpl	.-8      	; 0x590 <DIO_SetPinValue+0xc0>
 598:	82 2b       	or	r24, r18
 59a:	82 bb       	out	0x12, r24	; 18
 59c:	08 95       	ret
 59e:	41 11       	cpse	r20, r1
 5a0:	0b c0       	rjmp	.+22     	; 0x5b8 <DIO_SetPinValue+0xe8>
 5a2:	22 b3       	in	r18, 0x12	; 18
 5a4:	81 e0       	ldi	r24, 0x01	; 1
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <DIO_SetPinValue+0xde>
 5aa:	88 0f       	add	r24, r24
 5ac:	99 1f       	adc	r25, r25
 5ae:	6a 95       	dec	r22
 5b0:	e2 f7       	brpl	.-8      	; 0x5aa <DIO_SetPinValue+0xda>
 5b2:	80 95       	com	r24
 5b4:	82 23       	and	r24, r18
 5b6:	82 bb       	out	0x12, r24	; 18
 5b8:	08 95       	ret

000005ba <DIO_GetPinValue>:
 5ba:	81 30       	cpi	r24, 0x01	; 1
 5bc:	79 f0       	breq	.+30     	; 0x5dc <DIO_GetPinValue+0x22>
 5be:	28 f0       	brcs	.+10     	; 0x5ca <DIO_GetPinValue+0x10>
 5c0:	82 30       	cpi	r24, 0x02	; 2
 5c2:	a9 f0       	breq	.+42     	; 0x5ee <DIO_GetPinValue+0x34>
 5c4:	83 30       	cpi	r24, 0x03	; 3
 5c6:	e1 f0       	breq	.+56     	; 0x600 <DIO_GetPinValue+0x46>
 5c8:	24 c0       	rjmp	.+72     	; 0x612 <DIO_GetPinValue+0x58>
 5ca:	89 b3       	in	r24, 0x19	; 25
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	02 c0       	rjmp	.+4      	; 0x5d4 <DIO_GetPinValue+0x1a>
 5d0:	95 95       	asr	r25
 5d2:	87 95       	ror	r24
 5d4:	6a 95       	dec	r22
 5d6:	e2 f7       	brpl	.-8      	; 0x5d0 <DIO_GetPinValue+0x16>
 5d8:	81 70       	andi	r24, 0x01	; 1
 5da:	08 95       	ret
 5dc:	86 b3       	in	r24, 0x16	; 22
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <DIO_GetPinValue+0x2c>
 5e2:	95 95       	asr	r25
 5e4:	87 95       	ror	r24
 5e6:	6a 95       	dec	r22
 5e8:	e2 f7       	brpl	.-8      	; 0x5e2 <DIO_GetPinValue+0x28>
 5ea:	81 70       	andi	r24, 0x01	; 1
 5ec:	08 95       	ret
 5ee:	83 b3       	in	r24, 0x13	; 19
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <DIO_GetPinValue+0x3e>
 5f4:	95 95       	asr	r25
 5f6:	87 95       	ror	r24
 5f8:	6a 95       	dec	r22
 5fa:	e2 f7       	brpl	.-8      	; 0x5f4 <DIO_GetPinValue+0x3a>
 5fc:	81 70       	andi	r24, 0x01	; 1
 5fe:	08 95       	ret
 600:	80 b3       	in	r24, 0x10	; 16
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	02 c0       	rjmp	.+4      	; 0x60a <DIO_GetPinValue+0x50>
 606:	95 95       	asr	r25
 608:	87 95       	ror	r24
 60a:	6a 95       	dec	r22
 60c:	e2 f7       	brpl	.-8      	; 0x606 <DIO_GetPinValue+0x4c>
 60e:	81 70       	andi	r24, 0x01	; 1
 610:	08 95       	ret
 612:	80 e0       	ldi	r24, 0x00	; 0
 614:	08 95       	ret

00000616 <pwm_init>:
 616:	81 11       	cpse	r24, r1
 618:	56 c0       	rjmp	.+172    	; 0x6c6 <pwm_init+0xb0>
 61a:	87 b3       	in	r24, 0x17	; 23
 61c:	88 60       	ori	r24, 0x08	; 8
 61e:	87 bb       	out	0x17, r24	; 23
 620:	61 11       	cpse	r22, r1
 622:	27 c0       	rjmp	.+78     	; 0x672 <pwm_init+0x5c>
 624:	40 34       	cpi	r20, 0x40	; 64
 626:	51 05       	cpc	r21, r1
 628:	c1 f0       	breq	.+48     	; 0x65a <pwm_init+0x44>
 62a:	38 f4       	brcc	.+14     	; 0x63a <pwm_init+0x24>
 62c:	41 15       	cp	r20, r1
 62e:	51 05       	cpc	r21, r1
 630:	61 f0       	breq	.+24     	; 0x64a <pwm_init+0x34>
 632:	48 30       	cpi	r20, 0x08	; 8
 634:	51 05       	cpc	r21, r1
 636:	69 f0       	breq	.+26     	; 0x652 <pwm_init+0x3c>
 638:	08 95       	ret
 63a:	41 15       	cp	r20, r1
 63c:	81 e0       	ldi	r24, 0x01	; 1
 63e:	58 07       	cpc	r21, r24
 640:	81 f0       	breq	.+32     	; 0x662 <pwm_init+0x4c>
 642:	41 15       	cp	r20, r1
 644:	54 40       	sbci	r21, 0x04	; 4
 646:	89 f0       	breq	.+34     	; 0x66a <pwm_init+0x54>
 648:	08 95       	ret
 64a:	83 b7       	in	r24, 0x33	; 51
 64c:	89 66       	ori	r24, 0x69	; 105
 64e:	83 bf       	out	0x33, r24	; 51
 650:	08 95       	ret
 652:	83 b7       	in	r24, 0x33	; 51
 654:	8a 66       	ori	r24, 0x6A	; 106
 656:	83 bf       	out	0x33, r24	; 51
 658:	08 95       	ret
 65a:	83 b7       	in	r24, 0x33	; 51
 65c:	8b 66       	ori	r24, 0x6B	; 107
 65e:	83 bf       	out	0x33, r24	; 51
 660:	08 95       	ret
 662:	83 b7       	in	r24, 0x33	; 51
 664:	8c 66       	ori	r24, 0x6C	; 108
 666:	83 bf       	out	0x33, r24	; 51
 668:	08 95       	ret
 66a:	83 b7       	in	r24, 0x33	; 51
 66c:	8d 66       	ori	r24, 0x6D	; 109
 66e:	83 bf       	out	0x33, r24	; 51
 670:	08 95       	ret
 672:	61 30       	cpi	r22, 0x01	; 1
 674:	09 f0       	breq	.+2      	; 0x678 <pwm_init+0x62>
 676:	7e c0       	rjmp	.+252    	; 0x774 <pwm_init+0x15e>
 678:	40 34       	cpi	r20, 0x40	; 64
 67a:	51 05       	cpc	r21, r1
 67c:	c1 f0       	breq	.+48     	; 0x6ae <pwm_init+0x98>
 67e:	38 f4       	brcc	.+14     	; 0x68e <pwm_init+0x78>
 680:	41 15       	cp	r20, r1
 682:	51 05       	cpc	r21, r1
 684:	61 f0       	breq	.+24     	; 0x69e <pwm_init+0x88>
 686:	48 30       	cpi	r20, 0x08	; 8
 688:	51 05       	cpc	r21, r1
 68a:	69 f0       	breq	.+26     	; 0x6a6 <pwm_init+0x90>
 68c:	08 95       	ret
 68e:	41 15       	cp	r20, r1
 690:	81 e0       	ldi	r24, 0x01	; 1
 692:	58 07       	cpc	r21, r24
 694:	81 f0       	breq	.+32     	; 0x6b6 <pwm_init+0xa0>
 696:	41 15       	cp	r20, r1
 698:	54 40       	sbci	r21, 0x04	; 4
 69a:	89 f0       	breq	.+34     	; 0x6be <pwm_init+0xa8>
 69c:	08 95       	ret
 69e:	83 b7       	in	r24, 0x33	; 51
 6a0:	89 67       	ori	r24, 0x79	; 121
 6a2:	83 bf       	out	0x33, r24	; 51
 6a4:	08 95       	ret
 6a6:	83 b7       	in	r24, 0x33	; 51
 6a8:	8a 67       	ori	r24, 0x7A	; 122
 6aa:	83 bf       	out	0x33, r24	; 51
 6ac:	08 95       	ret
 6ae:	83 b7       	in	r24, 0x33	; 51
 6b0:	8b 67       	ori	r24, 0x7B	; 123
 6b2:	83 bf       	out	0x33, r24	; 51
 6b4:	08 95       	ret
 6b6:	83 b7       	in	r24, 0x33	; 51
 6b8:	8c 67       	ori	r24, 0x7C	; 124
 6ba:	83 bf       	out	0x33, r24	; 51
 6bc:	08 95       	ret
 6be:	83 b7       	in	r24, 0x33	; 51
 6c0:	8d 67       	ori	r24, 0x7D	; 125
 6c2:	83 bf       	out	0x33, r24	; 51
 6c4:	08 95       	ret
 6c6:	81 30       	cpi	r24, 0x01	; 1
 6c8:	09 f0       	breq	.+2      	; 0x6cc <pwm_init+0xb6>
 6ca:	54 c0       	rjmp	.+168    	; 0x774 <pwm_init+0x15e>
 6cc:	81 b3       	in	r24, 0x11	; 17
 6ce:	80 68       	ori	r24, 0x80	; 128
 6d0:	81 bb       	out	0x11, r24	; 17
 6d2:	61 11       	cpse	r22, r1
 6d4:	27 c0       	rjmp	.+78     	; 0x724 <pwm_init+0x10e>
 6d6:	40 34       	cpi	r20, 0x40	; 64
 6d8:	51 05       	cpc	r21, r1
 6da:	c1 f0       	breq	.+48     	; 0x70c <pwm_init+0xf6>
 6dc:	38 f4       	brcc	.+14     	; 0x6ec <pwm_init+0xd6>
 6de:	41 15       	cp	r20, r1
 6e0:	51 05       	cpc	r21, r1
 6e2:	61 f0       	breq	.+24     	; 0x6fc <pwm_init+0xe6>
 6e4:	48 30       	cpi	r20, 0x08	; 8
 6e6:	51 05       	cpc	r21, r1
 6e8:	69 f0       	breq	.+26     	; 0x704 <pwm_init+0xee>
 6ea:	08 95       	ret
 6ec:	41 15       	cp	r20, r1
 6ee:	81 e0       	ldi	r24, 0x01	; 1
 6f0:	58 07       	cpc	r21, r24
 6f2:	81 f0       	breq	.+32     	; 0x714 <pwm_init+0xfe>
 6f4:	41 15       	cp	r20, r1
 6f6:	54 40       	sbci	r21, 0x04	; 4
 6f8:	89 f0       	breq	.+34     	; 0x71c <pwm_init+0x106>
 6fa:	08 95       	ret
 6fc:	85 b5       	in	r24, 0x25	; 37
 6fe:	89 66       	ori	r24, 0x69	; 105
 700:	85 bd       	out	0x25, r24	; 37
 702:	08 95       	ret
 704:	85 b5       	in	r24, 0x25	; 37
 706:	8a 66       	ori	r24, 0x6A	; 106
 708:	85 bd       	out	0x25, r24	; 37
 70a:	08 95       	ret
 70c:	85 b5       	in	r24, 0x25	; 37
 70e:	8b 66       	ori	r24, 0x6B	; 107
 710:	85 bd       	out	0x25, r24	; 37
 712:	08 95       	ret
 714:	85 b5       	in	r24, 0x25	; 37
 716:	8c 66       	ori	r24, 0x6C	; 108
 718:	85 bd       	out	0x25, r24	; 37
 71a:	08 95       	ret
 71c:	85 b5       	in	r24, 0x25	; 37
 71e:	8d 66       	ori	r24, 0x6D	; 109
 720:	85 bd       	out	0x25, r24	; 37
 722:	08 95       	ret
 724:	61 30       	cpi	r22, 0x01	; 1
 726:	31 f5       	brne	.+76     	; 0x774 <pwm_init+0x15e>
 728:	40 34       	cpi	r20, 0x40	; 64
 72a:	51 05       	cpc	r21, r1
 72c:	c1 f0       	breq	.+48     	; 0x75e <pwm_init+0x148>
 72e:	38 f4       	brcc	.+14     	; 0x73e <pwm_init+0x128>
 730:	41 15       	cp	r20, r1
 732:	51 05       	cpc	r21, r1
 734:	61 f0       	breq	.+24     	; 0x74e <pwm_init+0x138>
 736:	48 30       	cpi	r20, 0x08	; 8
 738:	51 05       	cpc	r21, r1
 73a:	69 f0       	breq	.+26     	; 0x756 <pwm_init+0x140>
 73c:	08 95       	ret
 73e:	41 15       	cp	r20, r1
 740:	81 e0       	ldi	r24, 0x01	; 1
 742:	58 07       	cpc	r21, r24
 744:	81 f0       	breq	.+32     	; 0x766 <pwm_init+0x150>
 746:	41 15       	cp	r20, r1
 748:	54 40       	sbci	r21, 0x04	; 4
 74a:	89 f0       	breq	.+34     	; 0x76e <pwm_init+0x158>
 74c:	08 95       	ret
 74e:	85 b5       	in	r24, 0x25	; 37
 750:	89 67       	ori	r24, 0x79	; 121
 752:	85 bd       	out	0x25, r24	; 37
 754:	08 95       	ret
 756:	85 b5       	in	r24, 0x25	; 37
 758:	8a 67       	ori	r24, 0x7A	; 122
 75a:	85 bd       	out	0x25, r24	; 37
 75c:	08 95       	ret
 75e:	85 b5       	in	r24, 0x25	; 37
 760:	8b 67       	ori	r24, 0x7B	; 123
 762:	85 bd       	out	0x25, r24	; 37
 764:	08 95       	ret
 766:	85 b5       	in	r24, 0x25	; 37
 768:	8c 67       	ori	r24, 0x7C	; 124
 76a:	85 bd       	out	0x25, r24	; 37
 76c:	08 95       	ret
 76e:	85 b5       	in	r24, 0x25	; 37
 770:	8d 67       	ori	r24, 0x7D	; 125
 772:	85 bd       	out	0x25, r24	; 37
 774:	08 95       	ret

00000776 <pwm_SetSpeed>:
 776:	28 2f       	mov	r18, r24
 778:	3f ef       	ldi	r19, 0xFF	; 255
 77a:	63 9f       	mul	r22, r19
 77c:	c0 01       	movw	r24, r0
 77e:	11 24       	eor	r1, r1
 780:	64 e6       	ldi	r22, 0x64	; 100
 782:	70 e0       	ldi	r23, 0x00	; 0
 784:	0e 94 cc 03 	call	0x798	; 0x798 <__divmodhi4>
 788:	21 11       	cpse	r18, r1
 78a:	02 c0       	rjmp	.+4      	; 0x790 <pwm_SetSpeed+0x1a>
 78c:	6c bf       	out	0x3c, r22	; 60
 78e:	08 95       	ret
 790:	21 30       	cpi	r18, 0x01	; 1
 792:	09 f4       	brne	.+2      	; 0x796 <pwm_SetSpeed+0x20>
 794:	63 bd       	out	0x23, r22	; 35
 796:	08 95       	ret

00000798 <__divmodhi4>:
 798:	97 fb       	bst	r25, 7
 79a:	07 2e       	mov	r0, r23
 79c:	16 f4       	brtc	.+4      	; 0x7a2 <__divmodhi4+0xa>
 79e:	00 94       	com	r0
 7a0:	07 d0       	rcall	.+14     	; 0x7b0 <__divmodhi4_neg1>
 7a2:	77 fd       	sbrc	r23, 7
 7a4:	09 d0       	rcall	.+18     	; 0x7b8 <__divmodhi4_neg2>
 7a6:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <__udivmodhi4>
 7aa:	07 fc       	sbrc	r0, 7
 7ac:	05 d0       	rcall	.+10     	; 0x7b8 <__divmodhi4_neg2>
 7ae:	3e f4       	brtc	.+14     	; 0x7be <__divmodhi4_exit>

000007b0 <__divmodhi4_neg1>:
 7b0:	90 95       	com	r25
 7b2:	81 95       	neg	r24
 7b4:	9f 4f       	sbci	r25, 0xFF	; 255
 7b6:	08 95       	ret

000007b8 <__divmodhi4_neg2>:
 7b8:	70 95       	com	r23
 7ba:	61 95       	neg	r22
 7bc:	7f 4f       	sbci	r23, 0xFF	; 255

000007be <__divmodhi4_exit>:
 7be:	08 95       	ret

000007c0 <__udivmodhi4>:
 7c0:	aa 1b       	sub	r26, r26
 7c2:	bb 1b       	sub	r27, r27
 7c4:	51 e1       	ldi	r21, 0x11	; 17
 7c6:	07 c0       	rjmp	.+14     	; 0x7d6 <__udivmodhi4_ep>

000007c8 <__udivmodhi4_loop>:
 7c8:	aa 1f       	adc	r26, r26
 7ca:	bb 1f       	adc	r27, r27
 7cc:	a6 17       	cp	r26, r22
 7ce:	b7 07       	cpc	r27, r23
 7d0:	10 f0       	brcs	.+4      	; 0x7d6 <__udivmodhi4_ep>
 7d2:	a6 1b       	sub	r26, r22
 7d4:	b7 0b       	sbc	r27, r23

000007d6 <__udivmodhi4_ep>:
 7d6:	88 1f       	adc	r24, r24
 7d8:	99 1f       	adc	r25, r25
 7da:	5a 95       	dec	r21
 7dc:	a9 f7       	brne	.-22     	; 0x7c8 <__udivmodhi4_loop>
 7de:	80 95       	com	r24
 7e0:	90 95       	com	r25
 7e2:	bc 01       	movw	r22, r24
 7e4:	cd 01       	movw	r24, r26
 7e6:	08 95       	ret

000007e8 <_exit>:
 7e8:	f8 94       	cli

000007ea <__stop_program>:
 7ea:	ff cf       	rjmp	.-2      	; 0x7ea <__stop_program>
